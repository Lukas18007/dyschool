# Generated by Django 5.2.5 on 2025-08-08 23:43

import django.db.models.deletion
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    dependencies = [
        ('core', '0001_initial'),
    ]

    operations = [
        migrations.CreateModel(
            name='LessonTopic',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100)),
                ('description', models.TextField(blank=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
            ],
            options={
                'verbose_name': 'Lesson Topic',
                'verbose_name_plural': 'Lesson Topics',
                'ordering': ['specialization', 'name'],
            },
        ),
        migrations.CreateModel(
            name='Specialization',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100, unique=True)),
                ('description', models.TextField(blank=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
            ],
            options={
                'verbose_name': 'Specialization',
                'verbose_name_plural': 'Specializations',
                'ordering': ['name'],
            },
        ),
        migrations.CreateModel(
            name='LessonRequest',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('lesson_duration', models.PositiveIntegerField(help_text='Duration in minutes')),
                ('max_hourly_rate', models.DecimalField(decimal_places=2, help_text='Maximum hourly rate student can pay', max_digits=8)),
                ('additional_notes', models.TextField(blank=True)),
                ('status', models.CharField(choices=[('pending', 'Pending'), ('matched', 'Matched'), ('completed', 'Completed'), ('cancelled', 'Cancelled')], default='pending', max_length=20)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('student', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='lesson_requests', to=settings.AUTH_USER_MODEL)),
                ('lesson_topic', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='lesson_requests', to='core.lessontopic')),
            ],
            options={
                'verbose_name': 'Lesson Request',
                'verbose_name_plural': 'Lesson Requests',
                'ordering': ['-created_at'],
            },
        ),
        migrations.AddField(
            model_name='lessontopic',
            name='specialization',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='lesson_topics', to='core.specialization'),
        ),
        migrations.CreateModel(
            name='TeacherAvailability',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('available_date', models.DateField()),
                ('available_time', models.TimeField()),
                ('duration', models.PositiveIntegerField(help_text='Duration in minutes')),
                ('is_accepted', models.BooleanField(default=False)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('lesson_request', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='teacher_availabilities', to='core.lessonrequest')),
                ('teacher', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='availabilities', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'Teacher Availability',
                'verbose_name_plural': 'Teacher Availabilities',
                'ordering': ['available_date', 'available_time'],
                'unique_together': {('teacher', 'lesson_request', 'available_date', 'available_time')},
            },
        ),
        migrations.CreateModel(
            name='LessonBooking',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('status', models.CharField(choices=[('confirmed', 'Confirmed'), ('completed', 'Completed'), ('cancelled', 'Cancelled')], default='confirmed', max_length=20)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('teacher', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='bookings', to=settings.AUTH_USER_MODEL)),
                ('lesson_request', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='bookings', to='core.lessonrequest')),
                ('teacher_availability', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='booking', to='core.teacheravailability')),
            ],
            options={
                'verbose_name': 'Lesson Booking',
                'verbose_name_plural': 'Lesson Bookings',
                'ordering': ['-created_at'],
            },
        ),
        migrations.CreateModel(
            name='TeacherProfile',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('hourly_rate', models.DecimalField(decimal_places=2, help_text='Hourly rate in local currency', max_digits=8)),
                ('experience_years', models.PositiveIntegerField(help_text='Years of teaching experience')),
                ('about', models.TextField(help_text='Detailed description of teaching experience and approach')),
                ('is_available', models.BooleanField(default=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('lesson_topics', models.ManyToManyField(blank=True, related_name='teachers', to='core.lessontopic')),
                ('specializations', models.ManyToManyField(related_name='teachers', to='core.specialization')),
                ('user', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='teacher_profile', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'Teacher Profile',
                'verbose_name_plural': 'Teacher Profiles',
            },
        ),
        migrations.AlterUniqueTogether(
            name='lessontopic',
            unique_together={('specialization', 'name')},
        ),
    ]
